/**
 * TextMagic API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.8
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/ImportColumnMappingItem'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./ImportColumnMappingItem'));
  } else {
    // Browser globals (root is window)
    if (!root.TextmagicClient) {
      root.TextmagicClient = {};
    }
    root.TextmagicClient.ImportContactsInputObject = factory(root.TextmagicClient.ApiClient, root.TextmagicClient.ImportColumnMappingItem);
  }
}(this, function(ApiClient, ImportColumnMappingItem) {
  'use strict';




  /**
   * The ImportContactsInputObject model module.
   * @module model/ImportContactsInputObject
   * @version 2.0.613
   */

  /**
   * Constructs a new <code>ImportContactsInputObject</code>.
   * @alias module:model/ImportContactsInputObject
   * @class
   * @param column {Array.<module:model/ImportColumnMappingItem>} Column values mapping (number column => field), e.g. column[0] = \"phone\", column[1] = \"firstName\"
   */
  var exports = function(column) {
    var _this = this;

    _this['column'] = column;


  };

  /**
   * Constructs a <code>ImportContactsInputObject</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ImportContactsInputObject} obj Optional instance to populate.
   * @return {module:model/ImportContactsInputObject} The populated <code>ImportContactsInputObject</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('column')) {
        obj['column'] = ApiClient.convertToType(data['column'], [ImportColumnMappingItem]);
      }
      if (data.hasOwnProperty('listName')) {
        obj['listName'] = ApiClient.convertToType(data['listName'], 'String');
      }
      if (data.hasOwnProperty('listId')) {
        obj['listId'] = ApiClient.convertToType(data['listId'], 'String');
      }
    }
    return obj;
  }

  /**
   * Column values mapping (number column => field), e.g. column[0] = \"phone\", column[1] = \"firstName\"
   * @member {Array.<module:model/ImportColumnMappingItem>} column
   */
  exports.prototype['column'] = undefined;
  /**
   * List name. This list will be created during import. If such name is already taken, an ordinal (1, 2, ...) will be added to the end
   * @member {String} listName
   */
  exports.prototype['listName'] = undefined;
  /**
   * List ID contacts will be imported to
   * @member {String} listId
   */
  exports.prototype['listId'] = undefined;



  return exports;
}));


